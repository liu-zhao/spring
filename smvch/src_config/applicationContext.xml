<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-lazy-init="true">
	<!-- 自动扫描与装配bean -->
	<context:component-scan base-package="com.*"></context:component-scan>
	
	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.*">
		<context:exclude-filter expression="org.springframework.stereotype.Controller" type="annotation" />
	</context:component-scan>

	<!-- 配置数据源 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 配置DataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
	</bean>

	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 配置数据源属性 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置扫描的实体包(pojo) -->
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy"></bean>
		</property>
		<property name="packagesToScan" value="com.le.ac.project"></property>

		<!-- 配置Hibernate 的常用属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 数据库的方言 -->
				<!-- MySql方言-->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
				 
				<!-- Oracle方言
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop> -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<!-- 配置Hibernate 的事物管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- SpringContext Holder 
	<bean id="springContextHolder" class="com.le.ac.core.util.SpringContextHolder"
		lazy-init="false" />-->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!--配置回滚条件-->
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED"
				isolation="DEFAULT" rollback-for="com.le.ac.core.exception.ServiceException"/>
			<tx:method name="query*" read-only="true" propagation="REQUIRED"
				isolation="DEFAULT" rollback-for="com.le.ac.core.exception.ServiceException"/>
			<tx:method name="find*" read-only="true" propagation="REQUIRED"
				isolation="DEFAULT" rollback-for="com.le.ac.core.exception.ServiceException"/>
			<tx:method name="load*" read-only="true" propagation="REQUIRED"
				isolation="DEFAULT" rollback-for="com.le.ac.core.exception.ServiceException"/>
			<tx:method name="list*" read-only="true" propagation="REQUIRED"
				isolation="DEFAULT" rollback-for="com.le.ac.core.exception.ServiceException"/>
			<tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="com.le.ac.core.exception.ServiceException"/>
			<tx:method name="new*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="com.le.ac.core.exception.ServiceException"/>
			<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="com.le.ac.core.exception.ServiceException"/>
			<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="com.le.ac.core.exception.ServiceException"/>
			<tx:method name="batch*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="com.le.ac.core.exception.ServiceException"/>
			
		</tx:attributes>
	</tx:advice>
	<!--配置哪个包里的需要回滚-->
     <aop:config>
		<aop:pointcut expression="execution(* com.*.*..service..*.*(..))"
			id="bussinessService" />
		<aop:advisor pointcut-ref="bussinessService" advice-ref="txAdvice" />
	</aop:config>
	
</beans>
